SELECT DOB FROM STUDENTS;
SELECT NAME FROM STUDENTS WHERE STUD_ID=1;
SELECT STUDENTS_STUD_ID_SEQ.CURRVAL FROM DUAL;
/*
students + addresses[inner join]
*/
SELECT STUD_ID, NAME, EMAIL,PHONE, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
FROM STUDENTS S 
INNER JOIN ADDRESSES A 
ON S.ADDR_ID=A.ADDR_ID;

/*
students + addresses [left outer join]
*/
SELECT STUD_ID, NAME, EMAIL,PHONE, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
FROM STUDENTS S 
LEFT OUTER JOIN ADDRESSES A 
ON S.ADDR_ID=A.ADDR_ID;
     
/*
students + addresses [right outer join]
*/    
SELECT STUD_ID, NAME, EMAIL,PHONE, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
FROM STUDENTS S 
RIGHT OUTER JOIN ADDRESSES A 
ON S.ADDR_ID=A.ADDR_ID;   
 
/*
students + addresses [full outer join]
*/    
SELECT STUD_ID, NAME, EMAIL,PHONE, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
FROM STUDENTS S 
FULL OUTER JOIN ADDRESSES A 
ON S.ADDR_ID=A.ADDR_ID;   

--findStudentByIdWithAddress--
/*
stdents + addresses join
*/
SELECT STUD_ID, NAME, EMAIL,PHONE, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
FROM STUDENTS S 
LEFT OUTER JOIN ADDRESSES A 
ON S.ADDR_ID=A.ADDR_ID
WHERE S.STUD_ID=1;
 
--findStudentByIdWithCourses 
/*
students + courses  join
*/     
SELECT S.*,C.* 
FROM STUDENTS S 
JOIN COURSE_ENROLLMENT CE
ON S.STUD_ID = CE.STUD_ID
JOIN COURSES C
ON CE.COURSE_ID=C.COURSE_ID WHERE S.STUD_ID=1;
/*
students + courses join
*/
SELECT  S.STUD_ID,S.NAME AS STUDENT_NAME ,S.EMAIL,S.PHONE,S.DOB ,
        C.COURSE_ID,C.NAME AS COURSE_NAME ,C.DESCRIPTION,C.START_DATE,C.END_DATE
		FROM STUDENTS S 
		LEFT OUTER JOIN COURSE_ENROLLMENT CE
		ON S.STUD_ID = CE.STUD_ID
		LEFT OUTER JOIN COURSES C
		ON CE.COURSE_ID=C.COURSE_ID WHERE S.STUD_ID=1;
       
----findCourseByIdWithStudents 
SELECT C.*,S.* FROM COURSES C 
		JOIN COURSE_ENROLLMENT CE ON C.COURSE_ID=CE.COURSE_ID
		JOIN STUDENTS S ON CE.STUD_ID=S.STUD_ID
		WHERE C.COURSE_ID=1;


       
/*
tutor + courses join
*/
/*
inner join
*/
SELECT T.TUTOR_ID, T.NAME AS TUTOR_NAME, EMAIL,COURSE_ID, C.NAME, DESCRIPTION, START_DATE, END_DATE
      FROM TUTORS T 
      INNER JOIN COURSES C 
      ON T.TUTOR_ID=C.TUTOR_ID; 
      
/*
outer join
*/      
SELECT T.TUTOR_ID, T.NAME AS TUTOR_NAME, EMAIL,COURSE_ID, C.NAME, DESCRIPTION, START_DATE, END_DATE
      FROM TUTORS T 
      LEFT OUTER JOIN COURSES C 
      ON T.TUTOR_ID=C.TUTOR_ID;
      
      
           
SELECT T.TUTOR_ID, T.NAME AS TUTOR_NAME, EMAIL,COURSE_ID, C.NAME, DESCRIPTION, START_DATE, END_DATE
      FROM TUTORS T 
      LEFT OUTER JOIN COURSES C 
      ON T.TUTOR_ID=C.TUTOR_ID
      WHERE T.TUTOR_ID=1;  
      
/*
course + tutor join [1:1]
*/
SELECT COURSE_ID, C.NAME, C.DESCRIPTION, C.START_DATE, C.END_DATE,T.TUTOR_ID, T.NAME AS TUTOR_NAME, T.EMAIL
      FROM TUTORS T 
      LEFT OUTER JOIN COURSES C 
      ON T.TUTOR_ID=C.TUTOR_ID
      WHERE C.COURSE_ID=1; 

/*
 addresses + students join [1:N]
 */      
SELECT A.ADDR_ID,STREET,CITY,STATE,ZIP,COUNTRY,STUD_ID,NAME,EMAIL,DOB 
		FROM ADDRESSES A LEFT OUTER JOIN STUDENTS S 
		ON A.ADDR_ID=S.ADDR_ID 
		WHERE A.ADDR_ID=4;
/*
 addresses + tutors join [1:N]
 */      
SELECT A.ADDR_ID,STREET,CITY,STATE,ZIP,COUNTRY,TUTOR_ID,NAME,EMAIL,PHONE 
		FROM ADDRESSES A LEFT OUTER JOIN TUTORS T 
		ON A.ADDR_ID=T.ADDR_ID 
		WHERE A.ADDR_ID=1;        
/*
tutors + addresses + courses 
*/
SELECT T.TUTOR_ID, T.NAME AS TUTOR_NAME, EMAIL, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY,
       			COURSE_ID, C.NAME, DESCRIPTION, START_DATE, END_DATE
      FROM TUTORS T 
      LEFT OUTER JOIN ADDRESSES A 
      ON T.ADDR_ID=A.ADDR_ID
	  LEFT OUTER JOIN COURSES C ON T.TUTOR_ID=C.TUTOR_ID
WHERE T.TUTOR_ID=1;
        
  
  

      
      
-- Courses검색      
SELECT * FROM COURSES
WHERE TUTOR_ID = 1
AND NAME LIKE '%Quick%'
AND START_DATE >= TO_DATE('2015/05/01');
      
      
      
      
      
      
      
      